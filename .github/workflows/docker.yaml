name: 'Docker CI'

on:
  # run on main to master if docker related files were changed
  push:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/**'
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
    paths:
      - 'docker/**'
      - '.github/workflows/**'
  # run weekly on Monday at 12:00
  schedule:
    - cron: '0 12 * * 1'

jobs:
  matrix_setup:
    name: 'Setup Build Matrix'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './docker/'

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Build Matrix - Setup
        id: set_matrix
        run: echo "::set-output name=matrix::$(python2 -c 'import os, json; print json.dumps(os.listdir("."))')"

    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}

  docker:
    name: 'Build, Test, and Publish'
    needs: matrix_setup
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix_setup.outputs.matrix) }}

    env:
      REGISTRY: ghcr.io # GitHub Registry
      DOCKER_WORKING_DIR: './docker'

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      packages: write

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Docker - Set-Up Environment
        id: docker_setup
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1

      - name: Docker - Log into Registry ${{ env.REGISTRY }}
        id: docker_login
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker - Get Data
        id: docker_data
        run: |
          echo "::set-output name=git_tag::$(git rev-parse --short HEAD)"
          echo "::set-output name=image_name::${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.package }}"

      - name: Docker - Build And Publish Artifact
        id: docker_build_publish
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2
        with:
          context: ${{env.DOCKER_WORKING_DIR}}/${{ matrix.package }}
          push: ${{ github.event_name == 'push' && github.ref == github.event.repository.default_branch }}
          tags: ${{ steps.docker_data.outputs.image_name }}:${{ steps.docker_data.outputs.git_tag }},${{ steps.docker_data.outputs.image_name }}:latest

  code_quality:
    name: 'Code Quality Checks'
    needs: [matrix_setup, docker]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix_setup.outputs.matrix) }}

    env:
      REGISTRY: ghcr.io # GitHub Registry
      DOCKER_WORKING_DIR: './docker'

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      statuses: write

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Docker - Get Data
        id: docker_data
        run: |
          echo "::set-output name=image_name::${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.package }}"

      - name: Snyk - Check for Docker Image Vulnerabilities
        id: snyk_scan
        continue-on-error: true
        uses: snyk/actions/docker@7fad562681122205233d1242c3bb39598c5393da # renovate: tag=0.3.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ steps.docker_data.outputs.image_name }}:latest

      - name: SuperLinter - Lint Dockerfile
        id: superlinter_scan
        continue-on-error: true
        uses: github/super-linter/slim@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          VALIDATE_ALL_CODEBASE: ${{ github.event_name != 'pull_request' }}
          VALIDATE_DOCKERFILE: true # dockerfilelint
          VALIDATE_DOCKERFILE_HADOLINT: true # hadolint

      - name: Checks - Aggregated Outcome
        id: checks_outcome
        # for all steps with "continue-on-error: true"
        if: steps.snyk_scan.outcome == 'failure' || steps.superlinter_scan.outcome == 'failure'
        run: exit 1
