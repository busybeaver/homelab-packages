name: 'Snapcraft CI'

on:
  # run on main to master if snap related files were changed
  push:
    branches:
      - main
    paths:
      - 'snaps/**'
      - '.github/workflows/snaps.yaml'
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
    paths:
      - 'snaps/**'
      - '.github/workflows/snaps.yaml'
  # run weekly on Monday at 12:00
  schedule:
    - cron: '0 12 * * 1'

concurrency:
  # on main, we want all builds to complete even if commits/merging happens faster to make it easier to discover at which point
  # something broke; else, we cancel "old" builds and run/(re)start the build with the latest changes
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}-{1}', github.workflow, github.sha) || format('ci-{0}-{1}', github.workflow, github.ref) }}


jobs:
  matrix_setup:
    name: 'Setup Build Matrix'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: './snaps/'

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Build Matrix - Setup
        id: set_matrix
        run: |
          echo "::set-output name=matrix::$(python3 -c 'import os, json; print(json.dumps(os.listdir(".")))')"
          echo "::set-output name=snap_working_dir::./snaps"
          echo "::set-output name=snap_dir::/tmp"
          echo "::set-output name=snap_file::/tmp/package.snap"
          echo "::set-output name=snap_artifact_name::tmp_{0}.snap"

    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
      snap_working_dir: ${{ steps.set_matrix.outputs.snap_working_dir }}
      snap_dir: ${{ steps.set_matrix.outputs.snap_dir }}
      snap_file: ${{ steps.set_matrix.outputs.snap_file }}
      snap_artifact_name: ${{ steps.set_matrix.outputs.snap_artifact_name }}

  snapcraft_build:
    name: 'Build'
    needs: [matrix_setup]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix_setup.outputs.matrix) }}

    defaults:
      run:
        shell: bash

    permissions:
      contents: read

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Snapcraft - Build Artifact
        id: snapcraft_build
        uses: snapcore/action-build@a400bf1c2d0f23074aaacf08a144813c3c20b35d # renovate: tag=v1
        with:
          path: ${{ needs.matrix_setup.outputs.snap_working_dir }}/${{ matrix.package }}

      - name: GitHub - Move Snap Artifact
        id: move_artifact
        run: |
          mv ${{ steps.snapcraft_build.outputs.snap }} ${{ needs.matrix_setup.outputs.snap_file }}

      - name: GitHub - Upload Snap Artifact
        id: github_upload
        uses: actions/upload-artifact@27121b0bdffd731efa15d66772be8dc71245d074 # renovate: tag=v2
        with:
          name: ${{ format(needs.matrix_setup.outputs.snap_artifact_name, matrix.package) }}
          path: ${{ needs.matrix_setup.outputs.snap_file }}
          retention-days: 3

  snapcraft_test:
    name: 'Install and Test'
    needs: [matrix_setup, snapcraft_build]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix_setup.outputs.matrix) }}

    env:
      GOSS_VERSION: v0.3.16

    defaults:
      run:
        shell: bash

    permissions:
      contents: read
      statuses: write

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: GitHub - Download Snap Artifact
        id: github_download
        uses: actions/download-artifact@v2
        with:
          name: ${{ format(needs.matrix_setup.outputs.snap_artifact_name, matrix.package) }}
          path: ${{ needs.matrix_setup.outputs.snap_dir }}

      - name: Goss - Setup
        uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: ${{ env.GOSS_VERSION }}

      - name: GitHub - Get Test Parameter
        id: test_parameter
        run: |
          echo "::set-output name=working_dir::${{ needs.matrix_setup.outputs.snap_working_dir }}/${{ matrix.package }}"

      - name: Goss - Install and Test Artifact
        id: snapcraft_test
        if: hashFiles('${{ steps.test_parameter.outputs.working_dir }}/goss.yaml') != ''
        run: goss validate --format junit
        working-directory: ${{ steps.test_parameter.outputs.working_dir }}
        env:
          SNAP_PACKAGE: ${{ needs.matrix_setup.outputs.snap_file }}
          SERVICE_NAME: ${{ matrix.package }}

      - name: GitHub - Publish Unit Test Results
        id: github_publish_results
        uses: EnricoMi/publish-unit-test-result-action@v1.24
        if: always()
        with:
          files: ${{ steps.test_parameter.outputs.working_dir }}/**/*.xml

  snapcraft_publish:
    name: 'Publish'
    needs: [matrix_setup, snapcraft_test, snapcraft_build]
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && !github.event.act

    strategy:
      matrix:
        package: ${{ fromJson(needs.matrix_setup.outputs.matrix) }}

    env:
      PUBLISH_ARTIFACT: false

    defaults:
      run:
        shell: bash

    permissions:
      contents: read

    steps:
      - name: GitHub - Download Snap Artifact
        id: github_download
        uses: actions/download-artifact@v2
        with:
          name: ${{ format(needs.matrix_setup.outputs.snap_artifact_name, matrix.package) }}
          path: ${{ needs.matrix_setup.outputs.snap_dir }}

      - name: Snapcraft - Publish Artifact
        id: snapcraft_publish
        uses: snapcore/action-publish@f1879414dc5500e02a36f3d715bca6ddd438c913 # renovate: tag=v1
        if: env.PUBLISH_ARTIFACT == 'true'
        with:
          # Generate via snapcraft (available on ubuntu or via 'brew' on macOS):
          # snapcraft export-login --snaps="nomad-homelab,consul-homelab" --acls="package_access,package_push,package_update,package_release" exported.txt
          store_login: ${{ secrets.SNAPCRAFT_STORE_LOGIN }}
          snap: ${{ needs.matrix_setup.outputs.snap_file }}
          # https://github.community/t/do-expressions-support-ternary-operators-to-change-their-returned-value/18114/3
          # The condition evaluates to a boolean, which is implicitly cast to a number and used as array index, where false = 0 and true = 1.
          release: ${{ fromJSON('["edge", "stable"]')[github.ref == format('refs/heads/{0}', github.event.repository.default_branch)] }}
