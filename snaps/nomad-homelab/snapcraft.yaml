name: nomad-homelab
version: '1.4.3'
summary: HomeLab Nomad - Workload Orchestration Made Easy
description: HomeLab Nomad - A simple and flexible workload orchestrator to deploy and manage containers and non-containerized applications across on-prem and clouds at scale.
grade: stable
confinement: strict
base: core22
architectures:
  - build-on: [amd64, arm64]
    build-for: amd64
  - build-on: [amd64, arm64]
    build-for: arm64
parts:
  nomad:
    plugin: go
    source-type: git
    source: https://github.com/hashicorp/nomad.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION
    build-packages:
      - gcc
      # - golang-go
    build-snaps:
      - go/latest/stable
  nomad-wrapper:
    plugin: dump
    source-type: local
    source: ./bin/
    prime:
      # files in the prime phase/area are available in the final snap package
      - daemon.sh
    override-prime: |
      set -x
      craftctl default
      chmod +x daemon.sh
  build-env:
    plugin: dump
    source-type: local
    source: ./
    override-pull: | # craftctl set version="$(craftctl get version)-$CI_ENV_GIT_COMMIT"
      set -x
      craftctl default

      CI_ENV_FILE=".ci.env"
      if test -f "$CI_ENV_FILE"; then
        set -a; . "$CI_ENV_FILE"; set +a

        echo "Running on branch: $CI_ENV_GITHUB_REF"
        if [ -n "$CI_ENV_GITHUB_REF" ] && [ "$CI_ENV_GITHUB_REF" != "refs/heads/main" ]; then
          echo "Running on non-default branch, appending the short git rev to the version"
          snapcraftctl set-version "$(craftctl get version)-$CI_ENV_GIT_COMMIT"
          craftctl set grade="devel"
        fi
      else
          echo "$CI_ENV_FILE does not exist. Skip setting up properties based on CI environment."
      fi
apps:
  nomad-homelab:
    command: bin/nomad
    plugs:
      - network
      - network-bind
      # all plugs below requires manual connect after installation
      - network-observe # required to (read-only) access: /usr/sbin/ip
      - mount-observe # required to (read-only) access: /proc/self/mountinfo
  daemon:
    # SNAP_DATA is backed up and restored across snap refresh and snap revert operations
    # command: bin/consul agent -config-dir $SNAP_DATA/config/
    # we need to move this to a simple wrapper script, since snapcraft doesn't allow = chars in the command property
    # https://bugs.launchpad.net/snapd/+bug/1820055
    command: daemon.sh
    # no need for a "stop-command", the daemon/service is simply stopped via SIGINT
    restart-condition: always
    daemon: simple
    # don't start service during the snap installation since it needs some configuration files first
    install-mode: disable
    stop-timeout: 10s
    plugs:
      - network
      - network-bind
      # all plugs below requires manual connect after installation
      - network-observe # required to (read-only) access: /usr/sbin/ip
      - mount-observe # required to (read-only) access: /proc/self/mountinfo
